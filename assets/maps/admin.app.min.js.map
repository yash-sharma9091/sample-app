{"version":3,"sources":["admin.app.js","admin.config.js","admin.main.js","admin.routes.js","directives.js","dashboard/controllers/dashboardCtrl.js","login/controllers/loginCtrl.js","login/factories/loginSvr.js","rest-service.js","setting-service.js"],"names":["mimicTrading","angular","module","controller","$scope","$rootScope","$on","App","initComponents","Layout","initHeader","$state","initSidebar","setTimeout","QuickSidebar","init","Demo","initFooter","run","settings","$settings","config","$stateProvider","$urlRouterProvider","when","otherwise","$injector","$location","state","get","go","path","url","templateUrl","data","pageTitle","smallTitle","resolve","deps","$ocLazyLoad","load","name","insertBefore","files","authenticate","directive","link","scope","element","attrs","addClass","removeClass","event","$","setAngularJsSidebarMenuActiveLink","currentScope","scrollTop","layout","pageAutoScrollOnLoad","restrict","elem","ngClick","href","on","e","preventDefault","dropdownHover","$http","$timeout","initAjax","pageContentWhite","pageBodySolid","pageSidebarClosed","loginSrv","factory","localStorageService","isLogged","initAdminSession","admin","token","set","updateAdminSession","getToken","assetsPath","globalPath","layoutPath"],"mappings":"AAAA;;AAEA,IAAIA,eAAeC,QAAQC,MAAR,CAAe,cAAf,EAA+B,CACjD,WADiD,EAEjD,WAFiD,EAGjD,YAHiD,EAIjD,cAJiD,EAKjD,oBALiD,EAMjD,wBANiD,EAOjD,cAPiD,EAQ9C,aAR8C,EAS9C,YAT8C,EAUjD,eAViD,EAWjD,SAXiD,EAYjD,aAZiD,CAA/B,CAAnB;ACFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClKA;AACA;;AACAF,aAAaG,UAAb,CAAwB,eAAxB,EAAyC,CAAC,QAAD,EAAW,YAAX,EAAyB,UAASC,MAAT,EAAiBC,UAAjB,EAA6B;AAC3FD,WAAOE,GAAP,CAAW,oBAAX,EAAiC,YAAW;AACxCC,YAAIC,cAAJ,GADwC,CAClB;AACvB;AACF,KAHD;AAIH,CALwC,CAAzC;;AAOA;;;;;;AAMA;AACAR,aAAaG,UAAb,CAAwB,kBAAxB,E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","file":"../core/admin.app.min.js","sourcesContent":["'use strict';\n\nvar mimicTrading = angular.module('mimicTrading', [\n\t'ui.router',\n\t'ngAnimate',\n\t'ngMessages',\n\t'ngFileUpload',\n\t'LocalStorageModule',\n\t'ui.router.state.events',\n\t'ui.bootstrap', \n    'oc.lazyLoad',  \n    'ngSanitize',\n\t'angular-ladda',\n\t'ui.mask',\n\t'textAngular'\n\t\n]);","// 'use strict';\n\n// /* Application config */\n// /*Angular interceptors are service factories that are registered with the $httpProvider */\n// mimicTrading.config(['$httpProvider', function($httpProvider){\n// \tvar interceptor = ['$q', '$rootScope', 'loginSrv',function ($q, $rootScope, loginSrv) {\n//         return {\n//         \trequest: function (config) {\n//                 // TRUE (Authorization: Token 205468286028d2d9df99a2f8f7a423220ef44452)\n//                 config.headers = config.headers || {};\n//                 var token = loginSrv.getToken();\n                \n//                 if (token) {\n//                     config.headers.Authorization = `Bearer ${token}`;\n//                     loginSrv.isLogged = true;\n//                 }\n// \t           \treturn config;\n// \t       \t},\n\n//             requestError: function (rejection) {\n//                 return $q.reject(rejection);\n//             },\n\n//             response: function (response) {\n//                 return response || $q.when(response);\n//             },\n\n//             // Revoke client authentication if 400 is received\n//             responseError: function (rejection) {\n                \n//                 if( 'onLine' in navigator ){\n//                     if( !navigator.onLine ){\n//                         $rootScope.$broadcast('server_error',{message:'ERR_INTERNET_DISCONNECTED'});\n//                         return;    \n//                     }\n//                 }\n                \n\n//                 if(rejection.status === 401) {\n//                     if(rejection.data.errors.code === \"invalid_token\") {\n//                         $rootScope.$broadcast('server_error',{message:'Your Session has been expired, please login again to continue.', status_code: 401});\n//                         return;\n//                     }\n//                 }\n                \n//                 if(rejection.status <= 0) {\n//                     $rootScope.$broadcast('server_error',{message:'ERR_CONNECTION_REFUSED'});\n//                     return;\n//                 }\n//                 return $q.reject(rejection);\n//             }\n//         };\n//     }];\n\n// \t$httpProvider.interceptors.push(interceptor);\n// }])\n// .config(['$compileProvider', function ($compileProvider) {\n//   $compileProvider.debugInfoEnabled(false);\n// }])\n// .config(['laddaProvider', function (laddaProvider) {\n//     laddaProvider.setOption({\n//         style: 'zoom-in',\n//     });\n// }])\n// .config(['$ocLazyLoadProvider', function($ocLazyLoadProvider) {\n//     $ocLazyLoadProvider.config({\n//         // global configs go here\n//     });\n// }])\n// .config(['$qProvider', function ($qProvider) {\n//     $qProvider.errorOnUnhandledRejections(false);\n// }])\n// // .config(['localStorageServiceProvider', function(localStorageServiceProvider){\n// //     var hostname = window.location.hostname;\n// //     var prefix;\n// //     switch(hostname){\n// //         case 'localhost': \n// //         case 'local.mimic.com':\n// //         prefix = 'localAdmin';\n// //         break;\n\n// //         default:\n// //         prefix = 'prodAdmin';\n// //     }\n// //     localStorageServiceProvider.setPrefix(prefix);\n// // }])\n// .run(['$location','$rootScope','loginSrv','$state','localStorageService','$timeout','$injector','notificationSvr',\n// \tfunction($location, $rootScope, loginSrv, $state,localStorageService, $timeout, $injector, notificationSvr){\n\n// \t\t$rootScope.$on(\"$stateChangeStart\", function (event, toState, toParams, fromState, fromParams) {\n//             $rootScope.isPageLoading = true; \n//             $rootScope.server_error_message = '';\n//             if (toState.authenticate && !loginSrv.isLogged && !localStorageService.get('admin')){\n//                 loginSrv.isLogged = false;\n//                 $state.go(\"login\");\n//                 event.preventDefault(); \n//             }else {\n//                 var token = localStorageService.get('token');\n//                 if($location.path() === '/' && token ){\n//                     $location.path('/dashboard');\n//                 }\n//             }\n// \t\t});\n\n//         $rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n//             $rootScope.isPageLoading = false;\n//         });\n\n//         $rootScope.$on('$stateChangeError', function (event, toState, toParams, fromState, fromParams, error) {\n//             if( error.errors ) {\n//                 /**\n//                  * This will help in resolve 500 state\n//                  * without url change\n//                  */\n//                 let state = $injector.get('$state');\n//                 state.go('500');\n//                 App.alert({type: ('danger'), icon: ( 'warning'), message: error.message, container: $rootScope.settings.errorContainer, place: 'prepend'});\n//                 return $location.path();\n//             }\n//         });\n\n//         /* This will logout the admin from the application */\n//         $rootScope.clearToken = function () {\n//             localStorageService.remove('token');\n//             localStorageService.remove('admin');\n//             delete $rootScope.admin;\n//             loginSrv.isLogged = false;\n//             $state.go(\"login\");\n//         };\n\n//         // Set the admin for entire application\n//         $rootScope.admin = localStorageService.get('admin');\n\n//         // If any global error occured\n//         $rootScope.$on('server_error', function (event, res) {\n//             if(res.status_code){\n//                 if(res.status_code === 401){\n//                     $rootScope.clearToken();\n//                 }\n//             }\n//             $rootScope.server_error_message = res.message;\n//         });\n\n//         $rootScope.manageCount = (data) => {\n//             if( data ) {\n//                 $rootScope.notificationCount = data.records.count;    \n//             } else {\n//                 if( $rootScope.notificationCount > 0 ) {\n//                     $rootScope.notificationCount -= 1;\n//                 }\n//             }\n//         };\n\n//         $rootScope.goToNotificationUrl = (data) => {\n//             notificationSvr.markAsRead([data.id])\n//             .then(response => {\n//                 $rootScope.manageCount();\n//                 $location.path(data.url);\n//             })\n//             .catch(errors => App.alert({type: ('danger'), icon: ( 'warning'), message: errors.message, container: $rootScope.settings.errorContainer, place: 'prepend'}));\n//         };\n//     }\n// ]);\n","'use strict';\n/* Setup App Main Controller */\nmimicTrading.controller('AppController', ['$scope', '$rootScope', function($scope, $rootScope) {\n    $scope.$on('$viewContentLoaded', function() {\n        App.initComponents(); // init core components\n       //Layout.init(); //  Init entire layout(header, footer, sidebar, etc) on page load if the partials included in server side instead of loading with ng-include directive \n    });\n}]);\n\n/***\nLayout Partials.\nBy default the partials are loaded through AngularJS ng-include directive. In case they loaded in server side(e.g: PHP include function) then below partial \ninitialization can be disabled and Layout.init() should be called on page load complete as explained above.\n***/\n\n/* Setup Layout Part - Header */\nmimicTrading.controller('HeaderController', ['$scope', function($scope) {\n    $scope.$on('$includeContentLoaded', function() {\n        Layout.initHeader(); // init header\n    });\n}]);\n\n/* Setup Layout Part - Sidebar */\nmimicTrading.controller('SidebarController', ['$state', '$scope', function($state, $scope) {\n    $scope.$on('$includeContentLoaded', function() {\n        Layout.initSidebar($state); // init sidebar\n    });\n}]);\n\n/* Setup Layout Part - Quick Sidebar */\nmimicTrading.controller('QuickSidebarController', ['$scope', function($scope) {    \n    $scope.$on('$includeContentLoaded', function() {\n       setTimeout(function(){\n            QuickSidebar.init(); // init quick sidebar        \n        }, 2000)\n    });\n}]);\n\n/* Setup Layout Part - Theme Panel */\nmimicTrading.controller('ThemePanelController', ['$scope', function($scope) {    \n    $scope.$on('$includeContentLoaded', function() {\n        Demo.init(); // init theme panel\n    });\n}]);\n\n/* Setup Layout Part - Footer */\nmimicTrading.controller('FooterController', ['$scope', function($scope) {\n    $scope.$on('$includeContentLoaded', function() {\n        Layout.initFooter(); // init footer\n    });\n}]);\n\n/* Init global settings and run the app */\nmimicTrading.run([\"$rootScope\", \"settings\", \"$state\", function($rootScope, settings, $state) {\n    $rootScope.$state = $state; // state to be accessed from view\n    $rootScope.$settings = settings; // state to be accessed from view\n}]);","'use strict';\n\n/* Application routes */\nmimicTrading.config(['$stateProvider', '$urlRouterProvider',function($stateProvider, $urlRouterProvider){\n\t // the known route\n    $urlRouterProvider.when('', '/');\n\n    // For any unmatched url, send to 404\n    //$urlRouterProvider.otherwise('/404');\n    $urlRouterProvider.otherwise(function($injector, $location){\n\t   var state = $injector.get('$state');\n\t   state.go('404');\n\t   return $location.path();\n\t});\n    \n\t$stateProvider\n\t// .state('login',{\n\t// \turl: '/',\n\t// \tcontroller: 'loginCtrl',\n\t// \ttemplateUrl: '/login/views/login.html',\n\t// \tauthenticate: false,\n\t// \tdata: {pageTitle: 'Login'},\n\t// \tresolve: {\n\t// \t    deps: ['$ocLazyLoad', function($ocLazyLoad) {\n\t// \t        return $ocLazyLoad.load({\n\t// \t            name: 'mimicTrading',\n\t// \t            insertBefore: '#ng_load_plugins_before', // load the above css files before a LINK element with this ID. Dynamic CSS files must be loaded between core and theme css files\n\t// \t            files: [\n\t// \t                '/assets/css/admin-login-style.css'\n\t// \t            ] \n\t// \t        });\n\t// \t    }]\n\t// \t},\n\t// })\n\t.state('dashboard',{\n\t\turl: '/',\n\t\tcontroller: 'DashboardController',\n\t\ttemplateUrl: '/dashboard/views/dashboard.html',\n\t\tdata: {pageTitle: 'Dashboard', smallTitle: 'dashboard & statistics'},\n\t\tresolve: {\n\t\t    deps: ['$ocLazyLoad', function($ocLazyLoad) {\n\t\t        return $ocLazyLoad.load({\n\t\t            name: 'mimicTrading',\n\t\t            insertBefore: '#ng_load_plugins_before', // load the above css files before a LINK element with this ID. Dynamic CSS files must be loaded between core and theme css files\n\t\t            files: [\n\t\t                '/assets/global/plugins/morris/morris.css',                            \n\t\t                '/assets/global/plugins/morris/morris.min.js',\n\t\t                '/assets/global/plugins/morris/raphael-min.js',                            \n\t\t                '/assets/global/plugins/jquery.sparkline.min.js',\n\t\t                '/assets/pages/scripts/dashboard.min.js',\n\t\t            ] \n\t\t        });\n\t\t    }]\n\t\t},\n\t\tauthenticate: false\n\t})\n\t.state('404',{\n\t\ttemplateUrl: '/tpl/404.html',\n\t\tdata: {pageTitle: '404 Page Not Found'},\n\t\tauthenticate: false,\n\t\tresolve: {\n\t\t    deps: ['$ocLazyLoad', function($ocLazyLoad) {\n\t\t        return $ocLazyLoad.load({\n\t\t            name: 'mimicTrading',\n\t\t            insertBefore: '#ng_load_plugins_before',\n\t\t            files: [\n\t\t                '/assets/pages/css/error.min.css',\n\t\t            ] \n\t\t        });\n\t\t    }]\n\t\t},\n\t})\n\t.state('500',{\n\t\ttemplateUrl: '/tpl/500.html',\n\t\tdata: {pageTitle: '500 Internal Server Error'},\n\t\tauthenticate: false,\n\t\tresolve: {\n\t\t    deps: ['$ocLazyLoad', function($ocLazyLoad) {\n\t\t        return $ocLazyLoad.load({\n\t\t            name: 'mimicTrading',\n\t\t            insertBefore: '#ng_load_plugins_before',\n\t\t            files: [\n\t\t                '/assets/pages/css/error.min.css',\n\t\t            ] \n\t\t        });\n\t\t    }]\n\t\t},\n\t})\n\n\t.state('resetpassword',{\n\t\turl: '/resetpassword/:key',\n\t\ttemplateUrl: '/resetpassword/views/resetpassword.html',\n\t\tdata: {pageTitle: 'Reset Password'},\n\t\tauthenticate: false,\n\t    controller:'resetPasswordCtrl',\n\t    resolve: {\n\t\t    deps: ['$ocLazyLoad', function($ocLazyLoad) {\n\t\t        return $ocLazyLoad.load({\n\t\t            name: 'mimicTrading',\n\t\t            insertBefore: '#ng_load_plugins_before', // load the above css files before a LINK element with this ID. Dynamic CSS files must be loaded between core and theme css files\n\t\t            files: [\n\t\t                '/assets/css/admin-login-style.css'\n\t\t            ] \n\t\t        });\n\t\t    }]\n\t\t}\n\t});\n}]);","/***\r\nGLobal Directives\r\n***/\r\n\r\n// Route State Load Spinner(used on page or content load)\r\nmimicTrading.directive('ngSpinnerBar', ['$rootScope', '$state',\r\n    function($rootScope, $state) {\r\n        return {\r\n            link: function(scope, element, attrs) {\r\n                // by defult hide the spinner bar\r\n                element.addClass('hide'); // hide spinner bar by default\r\n\r\n                // display the spinner bar whenever the route changes(the content part started loading)\r\n                $rootScope.$on('$stateChangeStart', function() {\r\n                    element.removeClass('hide'); // show spinner bar\r\n                });\r\n\r\n                // hide the spinner bar on rounte change success(after the content loaded)\r\n                $rootScope.$on('$stateChangeSuccess', function(event) {\r\n                    element.addClass('hide'); // hide spinner bar\r\n                    \r\n                    $('body').removeClass('page-on-load'); // remove page loading indicator\r\n                    Layout.setAngularJsSidebarMenuActiveLink('match', null, event.currentScope.$state); // activate selected link in the sidebar menu\r\n                    \r\n                    // auto scorll to page top\r\n                    setTimeout(function () {\r\n                        App.scrollTop(); // scroll to the top on content load\r\n                    }, $rootScope.settings.layout.pageAutoScrollOnLoad);     \r\n                });\r\n               \r\n                // handle errors\r\n                $rootScope.$on('$stateNotFound', function() {\r\n                    element.addClass('hide'); // hide spinner bar\r\n                });\r\n\r\n                // handle errors\r\n                $rootScope.$on('$stateChangeError', function() {\r\n                    element.addClass('hide'); // hide spinner bar\r\n                });\r\n            }\r\n        };\r\n    }\r\n])\r\n\r\n// Handle global LINK click\r\nmimicTrading.directive('a', function() {\r\n    return {\r\n        restrict: 'E',\r\n        link: function(scope, elem, attrs) {\r\n            if (attrs.ngClick || attrs.href === '' || attrs.href === '#') {\r\n                elem.on('click', function(e) {\r\n                    e.preventDefault(); // prevent link click for above criteria\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\r\n\r\n// Handle Dropdown Hover Plugin Integration\r\nmimicTrading.directive('dropdownMenuHover', function () {\r\n  return {\r\n    link: function (scope, elem) {\r\n      elem.dropdownHover();\r\n    }\r\n  };  \r\n});","angular.module('mimicTrading').controller('DashboardController', function($rootScope, $scope, $http, $timeout) {\n    $scope.$on('$viewContentLoaded', function() {   \n        // initialize core components\n        App.initAjax();\n    });\n\n    // set sidebar closed and body solid layout mode\n    $rootScope.settings.layout.pageContentWhite = true;\n    $rootScope.settings.layout.pageBodySolid = false;\n    $rootScope.settings.layout.pageSidebarClosed = false;\n});","'use strict';\nmimicTrading.controller('loginCtrl', ['$scope','$rootScope','$state','$http', 'loginSrv',\n\t($scope,$rootScope,$state,$http, loginSrv) => {\n\n\t\t/**\n\t\t * login function will authenticate user \n\t\t * and redirect to specific dashboard\n\t\t * @param  {Boolean} isValid [Check if form is valid]\n\t\t * @return {none}   [User will redirect to dashboard]\n\t\t */\n\t// \t$scope.login = (isValid) => {\n\t// \t\tif( !isValid ){\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\t$scope.isLoading = true;\n\t// \t\tRestSvr.login('login', $scope.user)\n\t// \t\t.then(response => {\n\t// \t\t\t/* loginSrv will initialize user session\n\t// \t\t\t * and store user data into localStorage\n\t// \t\t\t * $rootScope.admin assign a globle variable\n\t// \t\t\t */\n\t// \t\t\tloginSrv.initAdminSession(response.user, response.token);\n\t// \t\t\t$state.go('dashboard');\t\n\t// \t\t})\n\t// \t\t.catch(errors => {\n\t// \t\t\t$scope.message = errors.message;\n\t// \t\t})\n\t// \t\t.then(() => {\n\t// \t\t\t$scope.isLoading = false;\n\t// \t\t});\n\t// \t};\n\n\t//    $scope.forgotpassword = () => {\n\t//    \t    $scope.isLoading = true;\n\t//    \t     let inputjson={email:$scope.email};\n\t// \t\t$http.post('adminapi/forgotpassword', inputjson)\n\t// \t\t.then(response => {\n\t// \t\t\tApp.alert({type: ('success'), icon: ( 'success'), message: response.data.message, container: $rootScope.settings.errorContainer, place: 'prepend', closeInSeconds: 5});\n\t// \t\t\t$state.go('login');\t\n\t// \t\t})\n\t// \t\t.catch(({data}) => {\n\t// \t\t\tconst {responsedata} = data;\n\t// \t\t\tApp.alert({type: ('danger'), icon: ( 'warning'), message: responsedata.message, container: $rootScope.settings.errorContainer, place: 'prepend', closeInSeconds: 5});\n\t// \t\t})\n\t// \t\t.then(() => {\n\t// \t\t\t$scope.isLoading = false;\n\t// \t\t});\n\t//   };\n\t}\n]);","'use strict';\n\nmimicTrading.factory('loginSrv', ['localStorageService', '$rootScope', function(localStorageService, $rootScope)  { // Don't use arrow function here because it will change the \"this\" to undefined\n    return {\n    \tisLogged: false,\n    \tinitAdminSession: function(admin, token) { // Don't use arrow function here because it will change the \"this\" to undefined\n    \t\tthis.isLogged = true;\n    \t\tlocalStorageService.set('token', token);\n    \t\tlocalStorageService.set('admin', admin);\n    \t\t$rootScope.admin = localStorageService.get('admin');\n\t\t},\n\t\tupdateAdminSession: function(admin, token) { // Don't use arrow function here because it will change the \"this\" to undefined\n\t\t\n\t\tlocalStorageService.set('admin', admin);\n\t\t\t\n\t\t\t$rootScope.admin = localStorageService.get('admin');\n\t\t},\n    \tgetToken: () => localStorageService.get('token')\n    };\n}]);\n","// 'use strict';\n\n// mimicTrading.factory('RestSvr',['$http', '$window', '$httpParamSerializerJQLike','$q',\n// ($http, $window, $httpParamSerializerJQLike, $q) => {\n//     return{\n//         login:\n//     }\n// }\n// ])","/* Setup global settings */\nmimicTrading.factory('settings', ['$rootScope', function($rootScope) {\n    // supported languages\n    var settings = {\n        layout: {\n            pageSidebarClosed: false, // sidebar menu state\n            pageContentWhite: true, // set page content layout\n            pageBodySolid: false, // solid body color state\n            pageAutoScrollOnLoad: 1000 // auto scroll to top on page load\n        },\n        assetsPath: '../assets',\n        globalPath: '../assets/global',\n        layoutPath: '../assets/layouts/layout',\n    };\n\n    $rootScope.settings = settings;\n\n    return settings;\n}]);"]}